#include "GRNMPCH.H"
#include "PAGE3.H"
//////////////////////////////////////////////////////////////////////////
using namespace HTL;
//////////////////////////////////////////////////////////////////////////
CPropertyPage3::CPropertyPage3(CString& filename,ATL::_U_STRINGorID title, bool IsExterior, bool EnableDoubleBuffer) :
	CResizablePropertyPageImpl<CPropertyPage3>(title, IsExterior, EnableDoubleBuffer),
	m_FileName(filename),
	m_Display(),
	m_Bitmap(NULL)
{

}
//////////////////////////////////////////////////////////////////////////
CPropertyPage3::~CPropertyPage3(VOID)
{

}
//////////////////////////////////////////////////////////////////////////
BOOL CPropertyPage3::OnSetActive(VOID)
{

	//////////////////////////////////////////////////////////////////////////
	GetPropertySheet().SetWizardButtons(PSWIZB_FINISH| PSWIZB_BACK);
	//////////////////////////////////////////////////////////////////////////
	return TRUE;
	//////////////////////////////////////////////////////////////////////////

}
//////////////////////////////////////////////////////////////////////////
LRESULT CPropertyPage3::OnInitDialog(HWND hWnd, LPARAM lParam)
{

	//////////////////////////////////////////////////////////////////////////
	m_Display.Detach();
	m_Display.Attach(GetDlgItem(IDC_STATIC_PICTURE));
	//////////////////////////////////////////////////////////////////////////
	if (m_Bitmap == NULL) {
		m_Bitmap = (HBITMAP)::LoadImage(NULL, m_FileName, IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);
		// Verify that the image was loaded
		if (m_Bitmap == NULL) {
			::MessageBox(NULL, __T("LoadImage Failed"), __T("Error"), MB_OK);
			return TRUE;
		}
	}
	else {

	}
	//////////////////////////////////////////////////////////////////////////
	SetMsgHandled(FALSE);
	//////////////////////////////////////////////////////////////////////////
	return TRUE;
	//////////////////////////////////////////////////////////////////////////

}
//////////////////////////////////////////////////////////////////////////
BOOL CPropertyPage3::OnQueryCancel(VOID)
{

	//////////////////////////////////////////////////////////////////////////
	return FALSE;
	//////////////////////////////////////////////////////////////////////////

}
//////////////////////////////////////////////////////////////////////////
BOOL CPropertyPage3::OnPaint(HDC dc) {

	//CDC devicecontext(dc);
	//devicecontext.FillSolidRect(0, 0, 256, 256, (COLOR_WINDOW + 1));

	// Create a device context that is compatible with the window
	HDC hLocalDC;
	hLocalDC = ::CreateCompatibleDC(m_Display.GetDC());
	// Verify that the device context was created
	if (hLocalDC == NULL) {
		::MessageBox(NULL, __T("CreateCompatibleDC Failed"), __T("Error"), MB_OK);
		return TRUE;
	}

	// Get the bitmap's parameters and verify the get
	BITMAP qBitmap;
	int iReturn = GetObject(reinterpret_cast<HGDIOBJ>(m_Bitmap), sizeof(BITMAP), reinterpret_cast<LPVOID>(&qBitmap));
	if (!iReturn) {
		::MessageBox(NULL, __T("GetObject Failed"), __T("Error"), MB_OK);
		return TRUE;
	}

	// Select the loaded bitmap into the device context
	HBITMAP hOldBmp = (HBITMAP)::SelectObject(hLocalDC, m_Bitmap);
	if (hOldBmp == NULL) {
		::MessageBox(NULL, __T("SelectObject Failed"), __T("Error"), MB_OK);
		return TRUE;
	}

	// Blit the dc which holds the bitmap onto the window's dc
	BOOL qRetBlit = ::BitBlt(m_Display.GetDC(), 0, 0, qBitmap.bmWidth, qBitmap.bmHeight, hLocalDC, 0, 0, SRCCOPY);
	if (!qRetBlit) {
		::MessageBox(NULL, __T("Blit Failed"), __T("Error"), MB_OK);
		return TRUE;
	}

	// Unitialize and deallocate resources
	::SelectObject(hLocalDC, hOldBmp);
	::DeleteDC(hLocalDC);

	return TRUE;

}
//////////////////////////////////////////////////////////////////////////
LRESULT CPropertyPage3::OnBnClickedButtonLeft(WORD /*wNotifyCode*/, WORD /*wID*/, HWND /*hWndCtl*/, BOOL& bHandled)
{
	//////////////////////////////////////////////////////////////////////////
	bHandled = TRUE;
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	return 0;
	//////////////////////////////////////////////////////////////////////////

}
//////////////////////////////////////////////////////////////////////////
LRESULT CPropertyPage3::OnBnClickedButtonRight(WORD /*wNotifyCode*/, WORD /*wID*/, HWND /*hWndCtl*/, BOOL& bHandled)
{
	//////////////////////////////////////////////////////////////////////////
	bHandled = TRUE;
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	return 0;
	//////////////////////////////////////////////////////////////////////////

}
//////////////////////////////////////////////////////////////////////////
